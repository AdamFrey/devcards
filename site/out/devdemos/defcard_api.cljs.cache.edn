;; Analyzed by ClojureScript 0.0-3269
{:use-macros {testing cljs.test, is cljs.test, deftest devcards.core, noframe-doc devcards.core, dom-node devcards.core, defcard devcards.core, defcard-doc devcards.core}, :excludes #{}, :name devdemos.defcard-api, :imports nil, :requires {t cljs.test, reagent reagent.core, devcards.core devcards.core, dom om.dom, reagent.core reagent.core, om.dom om.dom, cljs.test cljs.test, sablono.core sablono.core, sab sablono.core, string clojure.string, om.core om.core, om om.core, clojure.string clojure.string}, :uses nil, :defs {om-counter-inc {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 290, :column 7, :end-line 290, :end-column 21, :arglists (quote ([data owner]))}, :name devdemos.defcard-api/om-counter-inc, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 21, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 290, :end-line 290, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, t42332 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name devdemos.defcard-api/t42332, :file "example_src/devdemos/defcard_api.cljs", :type true, :anonymous true, :column 1, :line 271, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t42343 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta42344])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name devdemos.defcard-api/->t42343, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :method-params ([meta42344]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 292, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta42344])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t42349 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta42350])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name devdemos.defcard-api/->t42349, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :method-params ([meta42350]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 308, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta42350])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, counter-app-rct {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 216, :column 7, :end-line 216, :end-column 22, :arglists (quote ([data-atom]))}, :name devdemos.defcard-api/counter-app-rct, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 22, :method-params ([data-atom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 216, :end-line 216, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data-atom]))}, t42339 {:num-fields 6, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name devdemos.defcard-api/t42339, :file "example_src/devdemos/defcard_api.cljs", :type true, :anonymous true, :column 3, :line 283, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t42349 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name devdemos.defcard-api/t42349, :file "example_src/devdemos/defcard_api.cljs", :type true, :anonymous true, :column 1, :line 308, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t42346 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta42347])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name devdemos.defcard-api/->t42346, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :method-params ([meta42347]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 299, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta42347])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, cube-template {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 382, :column 7, :end-line 382, :end-column 20, :arglists (quote ([state]))}, :name devdemos.defcard-api/cube-template, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 20, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 382, :end-line 382, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, t42335 {:num-fields 6, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name devdemos.defcard-api/t42335, :file "example_src/devdemos/defcard_api.cljs", :type true, :anonymous true, :column 3, :line 283, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t42329 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name devdemos.defcard-api/t42329, :file "example_src/devdemos/defcard_api.cljs", :type true, :anonymous true, :column 3, :line 266, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, rand-strs {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 318, :column 7, :end-line 318, :end-column 16, :arglists (quote ([c]))}, :name devdemos.defcard-api/rand-strs, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 16, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 318, :end-line 318, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, ->t42329 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([widget data owner meta42330])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name devdemos.defcard-api/->t42329, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :method-params ([widget data owner meta42330]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 266, :max-fixed-arity 4, :fn-var true, :arglists (quote ([widget data owner meta42330])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t42332 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta42333])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name devdemos.defcard-api/->t42332, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :method-params ([meta42333]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 271, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta42333])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, om-test-atom {:name devdemos.defcard-api/om-test-atom, :file "example_src/devdemos/defcard_api.cljs", :line 280, :column 1, :end-line 280, :end-column 22, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 280, :column 10, :end-line 280, :end-column 22}}, ->t42326 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([widget data owner meta42327])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name devdemos.defcard-api/->t42326, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :method-params ([widget data owner meta42327]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 266, :max-fixed-arity 4, :fn-var true, :arglists (quote ([widget data owner meta42327])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, react-shared-atom {:name devdemos.defcard-api/react-shared-atom, :file "example_src/devdemos/defcard_api.cljs", :line 244, :column 1, :end-line 244, :end-column 27, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 244, :column 10, :end-line 244, :end-column 27}}, first-example-state {:name devdemos.defcard-api/first-example-state, :file "example_src/devdemos/defcard_api.cljs", :line 145, :column 1, :end-line 145, :end-column 29, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 145, :column 10, :end-line 145, :end-column 29}}, test-card-ex {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 308, :column 10, :end-line 308, :end-column 22}, :name devdemos.defcard-api/test-card-ex, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 308, :end-line 308, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, widget {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 265, :column 7, :end-line 265, :end-column 13, :arglists (quote ([data owner]))}, :name devdemos.defcard-api/widget, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 13, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 265, :end-line 265, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, counter {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 282, :column 7, :end-line 282, :end-column 14, :arglists (quote ([owner data f s]))}, :name devdemos.defcard-api/counter, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 14, :method-params ([owner data f s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 282, :end-line 282, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner data f s]))}, ->t42335 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([counter owner data f s meta42336])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name devdemos.defcard-api/->t42335, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :method-params ([counter owner data f s meta42336]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 283, :max-fixed-arity 6, :fn-var true, :arglists (quote ([counter owner data f s meta42336])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, test-om-data {:name devdemos.defcard-api/test-om-data, :file "example_src/devdemos/defcard_api.cljs", :line 269, :column 1, :end-line 269, :end-column 22, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 269, :column 10, :end-line 269, :end-column 22}}, t42343 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name devdemos.defcard-api/t42343, :file "example_src/devdemos/defcard_api.cljs", :type true, :anonymous true, :column 1, :line 292, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t42326 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name devdemos.defcard-api/t42326, :file "example_src/devdemos/defcard_api.cljs", :type true, :anonymous true, :column 3, :line 266, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t42346 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name devdemos.defcard-api/t42346, :file "example_src/devdemos/defcard_api.cljs", :type true, :anonymous true, :column 1, :line 299, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, css-transform {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 346, :column 7, :end-line 346, :end-column 20, :arglists (quote ([{:keys [rx ry rz tx ty tz]}]))}, :name devdemos.defcard-api/css-transform, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 20, :method-params ([p__42364]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 346, :end-line 346, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [rx ry rz tx ty tz]}]))}, om-counter-dec {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 297, :column 7, :end-line 297, :end-column 21, :arglists (quote ([data owner]))}, :name devdemos.defcard-api/om-counter-dec, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 21, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 297, :end-line 297, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, ->t42339 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([counter owner data f s meta42340])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name devdemos.defcard-api/->t42339, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :method-params ([counter owner data f s meta42340]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 283, :max-fixed-arity 6, :fn-var true, :arglists (quote ([counter owner data f s meta42340])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, side {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 357, :column 7, :end-line 357, :end-column 11, :arglists (quote ([trans side-css]))}, :name devdemos.defcard-api/side, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 11, :method-params ([trans side-css]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 357, :end-line 357, :max-fixed-arity 2, :fn-var true, :arglists (quote ([trans side-css]))}, cube {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 362, :column 7, :end-line 362, :end-column 11, :arglists (quote ([{:keys [size cube-css side-css]}]))}, :name devdemos.defcard-api/cube, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 11, :method-params ([p__42367]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 362, :end-line 362, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [size cube-css side-css]}]))}}, :require-macros {t cljs.test, devcards.core devcards.core, dom om.dom, om.dom om.dom, dc devcards.core, cljs.test cljs.test, sablono.core sablono.core, sab sablono.core, om.core om.core, om om.core}, :cljs.analyzer/constants {:seen #{:path :div.devcard-padding :rx :frame :pre :omcard-ex :react-example :button :top :div.cube :func :ns :cube-css :name :omcard-shared-ex-1 :tz :ty :file :div.side :end-column :width :type :example-counter :edn-card-example :react-runner-card-example :helpful? :example-2 :example-incrementer :size :title :example-dom-node :documentation :column :style :example-decrementer :div :card :test-card-ex :main-obj :fail :tx :line :watch-atom :initial-data :opacity :side-css :count :first-example :expected :om-share-atoms :code :end-line :edn-card :shared :position :-webkit-transform-style :sablono-card-example :error :h2 :options :creating-your-own-cards :pass :react-runner-card-shared-1 :react-runner-card-shared-2 :target :arglists :actual :border :h3 :backgroundColor :doc :omcard-shared-ex-2 :p :rz :ry :om-test-atom-data :test :onClick :devdemos.defcard_api :message :height :heading :text}, :order [:path :func :devdemos.defcard_api :card :name :documentation :main-obj :initial-data :options :heading :first-example :example-2 :h3 :react-example :div :h2 :count :button :onClick :example-counter :example-incrementer :example-decrementer :example-dom-node :edn-card-example :edn-card :helpful? :sablono-card-example :div.devcard-padding :p :pre :code :react-runner-card-example :react-runner-card-shared-1 :react-runner-card-shared-2 :text :omcard-ex :target :watch-atom :om-share-atoms :title :omcard-shared-ex-1 :shared :omcard-shared-ex-2 :om-test-atom-data :test-card-ex :type :expected :actual :message :error :pass :fail :frame :ns :file :end-column :column :line :end-line :arglists :doc :test :rx :ry :rz :tx :ty :tz :div.side :style :size :cube-css :side-css :backgroundColor :width :height :position :top :-webkit-transform-style :div.cube :opacity :border :creating-your-own-cards]}, :doc nil}