;; Analyzed by ClojureScript 0.0-3269
{:use-macros {testing cljs.test, is cljs.test, deftest devcards.core, noframe-doc devcards.core, dom-node devcards.core, defcard devcards.core, defcard-doc devcards.core}, :excludes #{}, :name devdemos.defcard-api, :imports nil, :requires {t cljs.test, reagent reagent.core, dom om.dom, reagent.core reagent.core, om.dom om.dom, cljs.test cljs.test, sablono.core sablono.core, sab sablono.core, string clojure.string, om.core om.core, om om.core, clojure.string clojure.string}, :uses nil, :defs {om-counter-inc {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 289, :column 7, :end-line 289, :end-column 21, :arglists (quote ([data owner]))}, :name devdemos.defcard-api/om-counter-inc, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 21, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 289, :end-line 289, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, t31872 {:num-fields 6, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name devdemos.defcard-api/t31872, :file "example_src/devdemos/defcard_api.cljs", :type true, :anonymous true, :column 3, :line 282, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t31872 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([counter owner data f s meta31873])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name devdemos.defcard-api/->t31872, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :method-params ([counter owner data f s meta31873]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 282, :max-fixed-arity 6, :fn-var true, :arglists (quote ([counter owner data f s meta31873])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t31876 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name devdemos.defcard-api/t31876, :file "example_src/devdemos/defcard_api.cljs", :type true, :anonymous true, :column 1, :line 291, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t31879 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name devdemos.defcard-api/t31879, :file "example_src/devdemos/defcard_api.cljs", :type true, :anonymous true, :column 1, :line 298, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, counter-app-rct {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 215, :column 7, :end-line 215, :end-column 22, :arglists (quote ([data-atom]))}, :name devdemos.defcard-api/counter-app-rct, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 22, :method-params ([data-atom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 215, :end-line 215, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data-atom]))}, ->t31879 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta31880])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name devdemos.defcard-api/->t31879, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :method-params ([meta31880]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 298, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta31880])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t31882 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta31883])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name devdemos.defcard-api/->t31882, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :method-params ([meta31883]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 307, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta31883])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, cube-template {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 381, :column 7, :end-line 381, :end-column 20, :arglists (quote ([state]))}, :name devdemos.defcard-api/cube-template, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 20, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 381, :end-line 381, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, t31862 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name devdemos.defcard-api/t31862, :file "example_src/devdemos/defcard_api.cljs", :type true, :anonymous true, :column 3, :line 265, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t31859 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name devdemos.defcard-api/t31859, :file "example_src/devdemos/defcard_api.cljs", :type true, :anonymous true, :column 3, :line 265, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, rand-strs {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 317, :column 7, :end-line 317, :end-column 16, :arglists (quote ([c]))}, :name devdemos.defcard-api/rand-strs, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 16, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 317, :end-line 317, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, t31882 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name devdemos.defcard-api/t31882, :file "example_src/devdemos/defcard_api.cljs", :type true, :anonymous true, :column 1, :line 307, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t31859 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([widget data owner meta31860])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name devdemos.defcard-api/->t31859, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :method-params ([widget data owner meta31860]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 265, :max-fixed-arity 4, :fn-var true, :arglists (quote ([widget data owner meta31860])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t31868 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([counter owner data f s meta31869])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name devdemos.defcard-api/->t31868, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :method-params ([counter owner data f s meta31869]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 282, :max-fixed-arity 6, :fn-var true, :arglists (quote ([counter owner data f s meta31869])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, om-test-atom {:name devdemos.defcard-api/om-test-atom, :file "example_src/devdemos/defcard_api.cljs", :line 279, :column 1, :end-line 279, :end-column 22, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 279, :column 10, :end-line 279, :end-column 22}}, t31865 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name devdemos.defcard-api/t31865, :file "example_src/devdemos/defcard_api.cljs", :type true, :anonymous true, :column 1, :line 270, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, react-shared-atom {:name devdemos.defcard-api/react-shared-atom, :file "example_src/devdemos/defcard_api.cljs", :line 243, :column 1, :end-line 243, :end-column 27, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 243, :column 10, :end-line 243, :end-column 27}}, first-example-state {:name devdemos.defcard-api/first-example-state, :file "example_src/devdemos/defcard_api.cljs", :line 144, :column 1, :end-line 144, :end-column 29, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 144, :column 10, :end-line 144, :end-column 29}}, test-card-ex {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 307, :column 10, :end-line 307, :end-column 22}, :name devdemos.defcard-api/test-card-ex, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 307, :end-line 307, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, widget {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 264, :column 7, :end-line 264, :end-column 13, :arglists (quote ([data owner]))}, :name devdemos.defcard-api/widget, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 13, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 264, :end-line 264, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, counter {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 281, :column 7, :end-line 281, :end-column 14, :arglists (quote ([owner data f s]))}, :name devdemos.defcard-api/counter, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 14, :method-params ([owner data f s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 281, :end-line 281, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner data f s]))}, test-om-data {:name devdemos.defcard-api/test-om-data, :file "example_src/devdemos/defcard_api.cljs", :line 268, :column 1, :end-line 268, :end-column 22, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 268, :column 10, :end-line 268, :end-column 22}}, ->t31862 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([widget data owner meta31863])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name devdemos.defcard-api/->t31862, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :method-params ([widget data owner meta31863]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 265, :max-fixed-arity 4, :fn-var true, :arglists (quote ([widget data owner meta31863])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t31865 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta31866])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name devdemos.defcard-api/->t31865, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :method-params ([meta31866]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 270, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta31866])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, css-transform {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 345, :column 7, :end-line 345, :end-column 20, :arglists (quote ([{:keys [rx ry rz tx ty tz]}]))}, :name devdemos.defcard-api/css-transform, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 20, :method-params ([p__31897]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 345, :end-line 345, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [rx ry rz tx ty tz]}]))}, om-counter-dec {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 296, :column 7, :end-line 296, :end-column 21, :arglists (quote ([data owner]))}, :name devdemos.defcard-api/om-counter-dec, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 21, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 296, :end-line 296, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, ->t31876 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta31877])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name devdemos.defcard-api/->t31876, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :method-params ([meta31877]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 291, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta31877])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, side {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 356, :column 7, :end-line 356, :end-column 11, :arglists (quote ([trans side-css]))}, :name devdemos.defcard-api/side, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 11, :method-params ([trans side-css]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 356, :end-line 356, :max-fixed-arity 2, :fn-var true, :arglists (quote ([trans side-css]))}, cube {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/defcard_api.cljs", :line 361, :column 7, :end-line 361, :end-column 11, :arglists (quote ([{:keys [size cube-css side-css]}]))}, :name devdemos.defcard-api/cube, :variadic false, :file "example_src/devdemos/defcard_api.cljs", :end-column 11, :method-params ([p__31900]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 361, :end-line 361, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [size cube-css side-css]}]))}, t31868 {:num-fields 6, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name devdemos.defcard-api/t31868, :file "example_src/devdemos/defcard_api.cljs", :type true, :anonymous true, :column 3, :line 282, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {t cljs.test, devcards.core devcards.core, dom om.dom, om.dom om.dom, dc devcards.core, cljs.test cljs.test, sablono.core sablono.core, sab sablono.core, om.core om.core, om om.core}, :cljs.analyzer/constants {:seen #{:path :div.devcard-padding :rx :frame :pre :omcard-ex :react-example :button :top :div.cube :func :ns :cube-css :name :omcard-shared-ex-1 :tz :ty :file :div.side :end-column :width :type :example-counter :edn-card-example :react-runner-card-example :helpful? :example-2 :example-incrementer :size :title :example-dom-node :documentation :column :style :example-decrementer :div :card :test-card-ex :main-obj :fail :tx :line :watch-atom :initial-data :opacity :side-css :count :first-example :expected :om-share-atoms :code :end-line :edn-card :shared :position :-webkit-transform-style :sablono-card-example :error :h2 :options :creating-your-own-cards :pass :react-runner-card-shared-1 :react-runner-card-shared-2 :target :arglists :actual :border :h3 :backgroundColor :doc :omcard-shared-ex-2 :p :rz :ry :om-test-atom-data :test :onClick :devdemos.defcard_api :message :height :heading :text}, :order [:path :func :devdemos.defcard_api :card :name :documentation :main-obj :initial-data :options :heading :first-example :example-2 :h3 :react-example :div :h2 :count :button :onClick :example-counter :example-incrementer :example-decrementer :example-dom-node :edn-card-example :edn-card :helpful? :sablono-card-example :div.devcard-padding :p :pre :code :react-runner-card-example :react-runner-card-shared-1 :react-runner-card-shared-2 :text :omcard-ex :target :watch-atom :om-share-atoms :title :omcard-shared-ex-1 :shared :omcard-shared-ex-2 :om-test-atom-data :test-card-ex :type :expected :actual :message :error :pass :fail :frame :ns :file :end-column :column :line :end-line :arglists :doc :test :rx :ry :rz :tx :ty :tz :div.side :style :size :cube-css :side-css :backgroundColor :width :height :position :top :-webkit-transform-style :div.cube :opacity :border :creating-your-own-cards]}, :doc nil}