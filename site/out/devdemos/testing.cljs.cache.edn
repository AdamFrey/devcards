;; Analyzed by ClojureScript 0.0-3269
{:use-macros {testing cljs.test, is cljs.test, defcard devcards.core}, :excludes #{}, :name devdemos.testing, :imports nil, :requires {devcards devcards.core, devcards.core devcards.core, t cljs.test, cljs.test cljs.test, sab sablono.core, sablono.core sablono.core}, :uses {report cljs.test}, :defs {t67358 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name devdemos.testing/t67358, :file "example_src/devdemos/testing.cljs", :type true, :anonymous true, :column 3, :line 13, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t67358 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta67359])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name devdemos.testing/->t67358, :variadic false, :file "example_src/devdemos/testing.cljs", :method-params ([meta67359]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta67359])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t67363 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name devdemos.testing/t67363, :file "example_src/devdemos/testing.cljs", :type true, :anonymous true, :column 1, :line 18, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t67363 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta67364])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name devdemos.testing/->t67363, :variadic false, :file "example_src/devdemos/testing.cljs", :method-params ([meta67364]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta67364])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, first-testers {:protocol-inline nil, :meta {:file "/Users/brucehauman/workspace/devcards/example_src/devdemos/testing.cljs", :line 18, :column 13, :end-line 18, :end-column 26}, :name devdemos.testing/first-testers, :variadic false, :file "example_src/devdemos/testing.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 18, :end-line 18, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}}, :require-macros {dc devcards.core, devcards.core devcards.core, cljs.test cljs.test, t cljs.test, sab sablono.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:path :first-testers :frame :testing-contexts :func :ns :name :some-tests :file :end-column :type :documentation :column :main-obj :fail :line :devdemos.testing :initial-data :expected :end-line :error :options :pass :arglists :actual :doc :test :message}, :order [:path :func :devdemos.testing :some-tests :name :documentation :main-obj :initial-data :options :type :expected :actual :message :error :pass :fail :frame :first-testers :testing-contexts :ns :file :end-column :column :line :end-line :arglists :doc :test]}, :doc nil}